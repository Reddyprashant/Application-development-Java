/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Beneficiary;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.CountryNetwork;
import Business.Network.StateNetwork;
import Business.Organization.BGVOrganization;
import Business.Organization.Organization;
import Business.Role.DisasterAdmin;
import Business.Role.HomelessAdmin;
import Business.Role.OldAgeAdmin;
import Business.Role.OrphanageAdmin;
import Business.SignUp.SignUpRequest;
import Business.SignUp.SignUpRequestOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.mail.SendFailedException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import utility.Validator;

/**
 *
 * @author prashantreddy
 */
public class BeneficiaryRequestAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form EntityManageRequestJPanel
     */
    private JPanel container;
    private Enterprise enterprise;
    private UserAccount account;
    private CountryNetwork country;
    private StateNetwork state;
    private EcoSystem system;
    private JPanel userProcessContainer;

    public BeneficiaryRequestAreaJPanel(JPanel userProcessContainer, UserAccount account, Enterprise enterprise, StateNetwork network, CountryNetwork cNetwork, EcoSystem business) {
        initComponents();
        //this.organizationDir = organizationDir;
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.container = container;
        this.system = business;
        this.state = network;
        this.country = cNetwork;
        this.account = account;
        populateWorkQueueTable();
    }

    public void populateWorkQueueTable() {
        try {
            DefaultTableModel model = (DefaultTableModel) tblReq.getModel();

            model.setRowCount(0);
            lblWarning.setText("");
            // SignUpRequest s=null;
            for (WorkRequest work : enterprise.getWorkQueue().getWorkRequestList()) {
                System.out.println("q" + work);
                if (work instanceof SignUpRequestOrganization) {
                    SignUpRequestOrganization s = (SignUpRequestOrganization) work;
                    Object[] row = new Object[6];
                    row[0] = s.getOrgName();
                    row[1] = s.getReceiver();
                    row[2] = s.getEnterprise();
                    row[3] = s.getOrgType().getValue();
                    row[4] = s.getCity();
                    row[5] = s;

                    model.addRow(row);
                }
            }
        } catch (Exception ex) {
            lblWarning.setText("*Sorry for the inconvinence. System is down, technical team is working on it");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAssign = new javax.swing.JButton();
        btnServe = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblReq = new javax.swing.JTable();
        lblWarning = new javax.swing.JLabel();
        btnAssignToMe = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnAssign.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 14)); // NOI18N
        btnAssign.setForeground(new java.awt.Color(71, 79, 112));
        btnAssign.setText("Assign to BGV");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });
        add(btnAssign, new org.netbeans.lib.awtextra.AbsoluteConstraints(398, 420, 150, 40));

        btnServe.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 14)); // NOI18N
        btnServe.setForeground(new java.awt.Color(71, 79, 112));
        btnServe.setText("Serve");
        btnServe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnServeActionPerformed(evt);
            }
        });
        add(btnServe, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 420, 100, 40));

        jLabel1.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(71, 79, 112));
        jLabel1.setText("Request Recieved");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 160, -1, -1));

        jLabel3.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(71, 79, 112));
        jLabel3.setText("Beneficiary Admin Request Area Panel");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 70, 500, -1));

        tblReq.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 14)); // NOI18N
        tblReq.setForeground(new java.awt.Color(71, 79, 112));
        tblReq.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Organization Name", "Reciever", "Enterprise", "Org Type", "City", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblReq);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 200, 690, 182));

        lblWarning.setForeground(new java.awt.Color(255, 0, 0));
        add(lblWarning, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 450, -1, -1));

        btnAssignToMe.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 14)); // NOI18N
        btnAssignToMe.setForeground(new java.awt.Color(71, 79, 112));
        btnAssignToMe.setText("Assign to Me");
        btnAssignToMe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignToMeActionPerformed(evt);
            }
        });
        add(btnAssignToMe, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 420, 160, 40));

        backJButton.setFont(new java.awt.Font("Lucida Sans Typewriter", 1, 14)); // NOI18N
        backJButton.setForeground(new java.awt.Color(71, 79, 112));
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 940, 110, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
        try {
            lblWarning.setText("");
            int selectedRow = tblReq.getSelectedRow();
            if (selectedRow < 0) {
                JOptionPane.showMessageDialog(null, "Please select the row to assign the account", "Warning", JOptionPane.WARNING_MESSAGE);
            } else {
                lblWarning.setText("");
                SignUpRequest p = (SignUpRequest) tblReq.getValueAt(selectedRow, 5);

                if (p.getStatus().equals("Requested")) {
                    //  System.out.println("admin name"+ account.getUsername());
                    p.setStatus("Background Verification");
                    //  p.setReceiver(account);
                    for (Enterprise enterprise1 : state.getEnterpriseDirectory().getEnterpriseList()) {
                        for (Organization organization1 : enterprise1.getOrganizationDirectory().getOrganizationList()) {
                            if (organization1 instanceof BGVOrganization) {
                                organization1.getWorkQueue().getWorkRequestList().add(p);
                            }
                        }
                    }
                    populateWorkQueueTable();

                } else {
                    JOptionPane.showMessageDialog(null, "Already assigned");
                }

            }
        } catch (Exception ex) {
            lblWarning.setText("*Sorry for the inconvinence. System is down, technical team is working on it");
        }


    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnServeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnServeActionPerformed
        // TODO add your handling code here:
        try {
            lblWarning.setText("");
            int selectedRow = tblReq.getSelectedRow();
            if (selectedRow < 0) {
                JOptionPane.showMessageDialog(null, "Please select the row to assign the account", "Warning", JOptionPane.WARNING_MESSAGE);
            } else {
                lblWarning.setText("");
                SignUpRequest p = (SignUpRequest) tblReq.getValueAt(selectedRow, 5);
                SignUpRequestOrganization orgRequest = null;
                //SignUpRequestEnterprise e = null;
                UserAccount acc = null;

                if (p.getReceiver() != null) {
                    if (p.getStatus().equals("Verified")|| p.getStatus().equals("Pending")) {
                        if (p instanceof SignUpRequestOrganization) {
                            orgRequest = (SignUpRequestOrganization) p;
                            //You can check for non duplicate of enterprise here.
                            // Enterprise enterprise = e.getState().getEnterpriseDirectory().createAndAddEnterprise(e.getName(), e.getEnterprise());
                            Employee emp = new Employee();
                            emp.setName(p.getName());
                            emp.setEmailId(p.getEmail());
                            Enterprise e = orgRequest.getEnterprise();
                            CountryNetwork country = orgRequest.getCountry();
                            StateNetwork state = orgRequest.getState();

                            Organization org = e.getOrganizationDirectory().createOrganization(orgRequest.getOrgType(), orgRequest.getName(), orgRequest.getCity(), orgRequest.getLatLong());

                            if (orgRequest.getOrgType() == Organization.Type.Disaster) {
                                acc = org.getUserAccountDirectory().createUserAccount(p.getUserName(), p.getPassword(), emp, new DisasterAdmin());
                            } else if (orgRequest.getOrgType() == Organization.Type.Homeless) {
                                acc = org.getUserAccountDirectory().createUserAccount(p.getUserName(), p.getPassword(), emp, new HomelessAdmin());
                            } else if (orgRequest.getOrgType() == Organization.Type.OldAge) {
                                acc = org.getUserAccountDirectory().createUserAccount(p.getUserName(), p.getPassword(), emp, new OldAgeAdmin());
                            } else if (orgRequest.getOrgType() == Organization.Type.Orphanage) {
                                acc = org.getUserAccountDirectory().createUserAccount(p.getUserName(), p.getPassword(), emp, new OrphanageAdmin());
                            }

                            try {
                                Validator.sendMessage(p.getEmail());
                            } catch (SendFailedException ex) {
                                JOptionPane.showMessageDialog(null, "User has a wrong email address");
                                p.setStatus("Cancelled");
                                populateWorkQueueTable();
                                return;
                            }
                        }

                        p.setStatus("Complete");
                        JOptionPane.showMessageDialog(null, "You have successfully completed the request");

                        populateWorkQueueTable();
                    } else {
                        JOptionPane.showMessageDialog(null, "You cannot complete it two times.");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Please assign first");
                }

            }
        } catch (Exception ex) {
            lblWarning.setText("*Sorry for the inconvinence. System is down, technical team is working on it");
        }
    }//GEN-LAST:event_btnServeActionPerformed

    private void btnAssignToMeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignToMeActionPerformed
        // TODO add your handling code here:
                int selectedRow = tblReq.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select the row to assign the account", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            SignUpRequestOrganization p = (SignUpRequestOrganization) tblReq.getValueAt(selectedRow, 5);

            if (p.getStatus().equals("Requested")) {
                //  System.out.println("admin name"+ account.getUsername());
                p.setStatus("Pending");
                p.setReceiver(account);

                populateWorkQueueTable();

            } else {
                JOptionPane.showMessageDialog(null, "Already assigned");
            }

        }

    }//GEN-LAST:event_btnAssignToMeActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnAssignToMe;
    private javax.swing.JButton btnServe;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblWarning;
    private javax.swing.JTable tblReq;
    // End of variables declaration//GEN-END:variables
}
